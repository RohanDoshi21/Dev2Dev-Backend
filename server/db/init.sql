CREATE TYPE statusstates AS ENUM ('OPEN', 'CLOSED', 'BANNED');

CREATE TYPE componenttype AS ENUM ('link', 'image');

CREATE TABLE Users (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    first_name varchar,
    last_name varchar,
    email varchar UNIQUE NOT NULL,
    password varchar,
    phone_number varchar,
    reputation float,
    dp_url varchar,
    created_at timestamp,
    updated_at timestamp
);

CREATE TABLE Question (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title varchar,
    description varchar,
    owner int,
    upvotes int,
    downvotes int,
    created_at timestamp,
    status statusstates
);

CREATE TABLE QuestionComponents (
    type componenttype,
    url varchar,
    question_id int,
    created_at timestamp
);

CREATE TABLE QuestionTag (
    tag varchar,
    question_id int
);

CREATE TABLE Answer (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    description varchar,
    owner int,
    question_id int,
    upvotes int,
    downvotes int,
    created_at timestamp
);

CREATE TABLE AnswerComponents (
    type ComponentType,
    url varchar,
    answer_id int,
    created_at timestamp
);

CREATE TABLE Comment (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    description varchar,
    owner int,
    answer_id int,
    created_at timestamp
);

CREATE TABLE QuestionVotes (
    id INT GENERATED ALWAYS AS IDENTITY,
    status int,
    owner int,
    question_id int,
    created_at timestamp,
    PRIMARY KEY (question_id, owner)
);

CREATE TABLE AnswerVotes (
    id INT GENERATED ALWAYS AS IDENTITY,
    status int,
    owner int,
    answer_id int,
    created_at timestamp,
    PRIMARY KEY (answer_id, owner)
);

CREATE TABLE UsersToken (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    token varchar,
    is_valid boolean,
    user_id int,
    created_at timestamp,
    updated_at timestamp
);

ALTER TABLE
    UsersToken
ADD
    FOREIGN KEY (user_id) REFERENCES Users (id);

ALTER TABLE
    Question
ADD
    FOREIGN KEY (owner) REFERENCES Users (id);

ALTER TABLE
    QuestionComponents
ADD
    FOREIGN KEY (question_id) REFERENCES Question (id);

ALTER TABLE
    Answer
ADD
    FOREIGN KEY (owner) REFERENCES Users (id);

ALTER TABLE
    Answer
ADD
    FOREIGN KEY (question_id) REFERENCES Question (id);

ALTER TABLE
    AnswerComponents
ADD
    FOREIGN KEY (answer_id) REFERENCES Answer (id);

ALTER TABLE
    Comment
ADD
    FOREIGN KEY (owner) REFERENCES Users (id);

ALTER TABLE
    Comment
ADD
    FOREIGN KEY (answer_id) REFERENCES Answer (id);

ALTER TABLE
    QuestionVotes
ADD
    FOREIGN KEY (owner) REFERENCES Users (id);

ALTER TABLE
    QuestionVotes
ADD
    FOREIGN KEY (question_id) REFERENCES Question (id);

ALTER TABLE
    AnswerVotes
ADD
    FOREIGN KEY (owner) REFERENCES Users (id);

ALTER TABLE
    AnswerVotes
ADD
    FOREIGN KEY (answer_id) REFERENCES Answer (id);